<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context-3.0.xsd
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	">

    <!-- 启用注解 -->
    <context:annotation-config />

    <!-- 启动组件扫描，排除@Controller组件，该组件由SpringMVC配置文件扫描 -->
    <context:component-scan base-package="com.aaron">
        <context:exclude-filter type="annotation"
                                expression="org.springframework.stereotype.Controller" />
    </context:component-scan>


    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <!--可以配置多个资源文件 -->
            <list>
                <value>classpath:elasticsearch.properties</value>
            </list>
        </property>
        <property name="fileEncoding">
            <value>utf-8</value>
        </property>
    </bean>

    <!-- =============事物========= -->
    <!--&lt;!&ndash; 配置spring的PlatformTransactionManager 名字是默认值 &ndash;&gt;
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
        <property name="rollbackOnCommitFailure" value="true"></property>
    </bean>
    &lt;!&ndash; 开启事务控制支持注解 &ndash;&gt;
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>-->
    <!-- =============事物========= -->

    <!--<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName">
            <value>java:comp/env/jdbc/dataSource</value>
        </property>
    </bean>

    &lt;!&ndash; 配置mybatis  org.mybatis.spring.SqlSessionFactoryBean&ndash;&gt;
    <bean id="sqlSessionFactory" class="com.whhx.system.ScanMultiPathTypeAliasFB">
        <property name="dataSource" ref="dataSource" />
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>
        <property name="typeAliasesPackage" value="com.whhx.**.model"></property>
        &lt;!&ndash; mapper扫描 &ndash;&gt;
        <property name="mapperLocations" value="classpath*:com/whhx/**/mapping/*.xml"></property>
    </bean>

    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate" scope="prototype">
        <constructor-arg ref="sqlSessionFactory" />
    </bean>

&lt;!&ndash;查询门户&ndash;&gt;
    <bean id="dataSource_mh" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName">
            <value>java:comp/env/jdbc/dataSource</value>
        </property>
    </bean>

    &lt;!&ndash; 配置mybatis  org.mybatis.spring.SqlSessionFactoryBean&ndash;&gt;
    <bean id="sqlSessionFactory_mh" class="com.whhx.system.ScanMultiPathTypeAliasFB">
        <property name="dataSource" ref="dataSource_mh" />
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>
        <property name="typeAliasesPackage" value="com.whhx.**.model"></property>
        &lt;!&ndash; mapper扫描 &ndash;&gt;
        <property name="mapperLocations" value="classpath*:com/whhx/**/mapping/*.xml"></property>
    </bean>

    <bean id="sqlSessionTemplate_mh" class="org.mybatis.spring.SqlSessionTemplate" scope="prototype">
        <constructor-arg ref="sqlSessionFactory_mh" />
    </bean>


查询门户-->

</beans>
